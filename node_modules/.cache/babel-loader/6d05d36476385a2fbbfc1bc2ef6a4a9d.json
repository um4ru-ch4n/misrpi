{"ast":null,"code":"var _jsxFileName = \"/workspaces/docker-create-react-app/src/Barrier.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Barrier = ({\n  number,\n  remove,\n  P,\n  setP,\n  withH,\n  H,\n  checked,\n  setChecked\n}) => {\n  _s();\n\n  const [um, setUm] = useState(0);\n  const [fm, setFm] = useState(0);\n  useEffect(() => {\n    if (um === 0 || fm === 0 || withH && H === 0) {\n      setP(NaN);\n    } else {\n      const result = withH ? 1 / um / (1 / um + 1 / fm + 1 / H) : 1 / um / (1 / um + 1 / fm);\n      setP(result);\n    }\n  }, [H, withH, um, fm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Barrier\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: ({\n        target\n      }) => {\n        setChecked(target.checked);\n      },\n      disabled: number === 1,\n      checked: checked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: `Преграда ${number}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"um\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      min: 0,\n      value: um,\n      onChange: ({\n        target\n      }) => {\n        const value = parseFloat(target.value);\n        setUm(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"fm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      min: 0,\n      value: fm,\n      onChange: ({\n        target\n      }) => {\n        const value = parseFloat(target.value);\n        setFm(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: `Pнсд = ${P || 'Деление на ноль'}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: `Pзащ = ${1 - P || 'Деление на ноль'}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), number !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: remove,\n      children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Barrier, \"HfNWaP5N1+QU+/DU+HyjPbADuCE=\");\n\n_c = Barrier;\n\nvar _c;\n\n$RefreshReg$(_c, \"Barrier\");","map":{"version":3,"sources":["/workspaces/docker-create-react-app/src/Barrier.jsx"],"names":["useEffect","Barrier","number","remove","P","setP","withH","H","checked","setChecked","um","setUm","useState","fm","setFm","NaN","result","target","value","parseFloat"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA,CAAlB;AAAqBC,EAAAA,IAArB;AAA2BC,EAAAA,KAA3B;AAAkCC,EAAAA,CAAlC;AAAqCC,EAAAA,OAArC;AAA8CC,EAAAA;AAA9C,CAAD,KAAgE;AAAA;;AACnF,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcC,QAAQ,CAAC,CAAD,CAA5B;AACA,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcF,QAAQ,CAAC,CAAD,CAA5B;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,EAAE,KAAK,CAAP,IAAYG,EAAE,KAAK,CAAnB,IAAyBP,KAAK,IAAIC,CAAC,KAAK,CAA5C,EAAgD;AAC5CF,MAAAA,IAAI,CAACU,GAAD,CAAJ;AACH,KAFD,MAEO;AACH,YAAMC,MAAM,GAAGV,KAAK,GACb,IAAII,EAAL,IAAY,IAAIA,EAAJ,GAAS,IAAIG,EAAb,GAAkB,IAAIN,CAAlC,CADc,GAEb,IAAIG,EAAL,IAAY,IAAIA,EAAJ,GAAS,IAAIG,EAAzB,CAFN;AAGAR,MAAAA,IAAI,CAACW,MAAD,CAAJ;AACH;AACJ,GATQ,EASN,CAACT,CAAD,EAAID,KAAJ,EAAWI,EAAX,EAAeG,EAAf,CATM,CAAT;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,QAAQ,EAAE,CAAC;AAAEI,QAAAA;AAAF,OAAD,KAAgB;AACtBR,QAAAA,UAAU,CAACQ,MAAM,CAACT,OAAR,CAAV;AACH,OAJL;AAKI,MAAA,QAAQ,EAAEN,MAAM,KAAK,CALzB;AAMI,MAAA,OAAO,EAAEM;AANb;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAA,gBAAQ,YAAWN,MAAO;AAA1B;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,GAAG,EAAE,CAFT;AAGI,MAAA,KAAK,EAAEQ,EAHX;AAII,MAAA,QAAQ,EAAE,CAAC;AAAEO,QAAAA;AAAF,OAAD,KAAgB;AACtB,cAAMC,KAAK,GAAGC,UAAU,CAACF,MAAM,CAACC,KAAR,CAAxB;AACAP,QAAAA,KAAK,CAACO,KAAD,CAAL;AACH;AAPL;AAAA;AAAA;AAAA;AAAA,YAXJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ,eAoBI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,GAAG,EAAE,CAFT;AAGI,MAAA,KAAK,EAAEL,EAHX;AAII,MAAA,QAAQ,EAAE,CAAC;AAAEI,QAAAA;AAAF,OAAD,KAAgB;AACtB,cAAMC,KAAK,GAAGC,UAAU,CAACF,MAAM,CAACC,KAAR,CAAxB;AACAJ,QAAAA,KAAK,CAACI,KAAD,CAAL;AACH;AAPL;AAAA;AAAA;AAAA;AAAA,YApBJ,eA6BI;AAAA,gBAAQ,UAASd,CAAC,IAAI,iBAAkB;AAAxC;AAAA;AAAA;AAAA;AAAA,YA7BJ,eA8BI;AAAA,gBAAQ,UAAS,IAAIA,CAAJ,IAAS,iBAAkB;AAA5C;AAAA;AAAA;AAAA;AAAA,YA9BJ,EA+BKF,MAAM,KAAK,CAAX,iBAAgB;AAAQ,MAAA,OAAO,EAAEC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA/BrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CAlDM;;GAAMF,O;;KAAAA,O","sourcesContent":["import { useEffect } from 'react';\n\nexport const Barrier = ({ number, remove, P, setP, withH, H, checked, setChecked }) => {\n    const [um, setUm] = useState(0)\n    const [fm, setFm] = useState(0)\n\n    useEffect(() => {\n        if (um === 0 || fm === 0 || (withH && H === 0)) {\n            setP(NaN)\n        } else {\n            const result = withH\n                ? (1 / um) / (1 / um + 1 / fm + 1 / H)\n                : (1 / um) / (1 / um + 1 / fm)\n            setP(result)\n        }\n    }, [H, withH, um, fm])\n\n    return (\n        <div className='Barrier'>\n            <input\n                type='checkbox'\n                onChange={({ target }) => {\n                    setChecked(target.checked)\n                }}\n                disabled={number === 1}\n                checked={checked}\n            />\n            <span>{`Преграда ${number}`}</span>\n            <span>um</span>\n            <input\n                type='number'\n                min={0}\n                value={um}\n                onChange={({ target }) => {\n                    const value = parseFloat(target.value)\n                    setUm(value)\n                }} />\n            <span>fm</span>\n            <input\n                type='number'\n                min={0}\n                value={fm}\n                onChange={({ target }) => {\n                    const value = parseFloat(target.value)\n                    setFm(value)\n                }}\n            />\n            <span>{`Pнсд = ${P || 'Деление на ноль'}`}</span>\n            <span>{`Pзащ = ${1 - P || 'Деление на ноль'}`}</span>\n            {number !== 1 && <button onClick={remove}>Удалить</button>}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}