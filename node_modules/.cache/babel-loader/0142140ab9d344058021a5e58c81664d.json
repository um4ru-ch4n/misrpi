{"ast":null,"code":"var _jsxFileName = \"/workspaces/docker-create-react-app/src/App.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport classes from './App.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [size, setSize] = useState(5);\n  const [vector, setVector] = useState([]);\n  const [W, setW] = useState([]);\n  const [V, setV] = useState([]);\n  const [Net1, setNet1] = useState([]);\n  const [Net2, setNet2] = useState([]);\n  const [Out1, setOut1] = useState([]);\n  const [Out2, setOut2] = useState([]);\n\n  const autoSetup = () => {\n    if (vector.length && vector.length !== size) {\n      const value = vector[0][0];\n      setVector(Array.from({\n        length: size\n      }).fill([value]));\n    }\n\n    const createMatrix = value => {\n      const row = Array.from({\n        length: size\n      }).fill(value);\n      return Array.from({\n        length: size\n      }).fill(row);\n    };\n\n    if (W.length && W.length !== size) {\n      const value = W[0][0];\n      setW(createMatrix(value));\n    }\n\n    if (V.length && V.length !== size) {\n      const value = V[0][0];\n      setV(createMatrix(value));\n    }\n  };\n\n  const computeNet = (vector, matrix) => {\n    if (vector.length !== size || matrix.length !== size) return [];\n    const result = Array.from({\n      length: vector.length\n    }).fill(0);\n\n    for (let i = 0; i < vector.length; i++) {\n      for (let j = 0; j < matrix.length; j++) {\n        const vecElem = vector[i];\n        const matrElem = matrix[j][i];\n        if (typeof vecElem !== 'number' || typeof matrElem !== 'number') return [];\n        result[i] += vecElem * matrElem;\n      }\n    }\n\n    return result;\n  };\n\n  const computeOut = net => {\n    return net.map(num => 1 / (1 + Math.pow(Math.E, -num)));\n  };\n\n  useEffect(() => {\n    setNet1(computeNet(vector.map(([num]) => num), W));\n  }, [vector, W]);\n  useEffect(() => {\n    setOut1(computeOut(Net1));\n  }, [Net1]);\n  useEffect(() => {\n    setNet2(computeNet(Out1, V));\n  }, [Out1, V]);\n  useEffect(() => {\n    setOut2(computeOut(Net2));\n  }, [Net2]);\n\n  const ResultColumn = ({\n    title,\n    result\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [title, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.net,\n        children: result.map(num => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: parseFloat(num.toFixed(4))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 30\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0420\\u0435\\u0430\\u043B\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F \\u043C\\u0430\\u0442\\u0440\\u0438\\u0447\\u043D\\u043E\\u0439 \\u043C\\u043E\\u0434\\u0435\\u043B\\u0438 \\u043E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438 \\u0432 \\u0438\\u0441\\u043A\\u0443\\u0441\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0445 \\u043D\\u0435\\u0439\\u0440\\u043E\\u043D \\u043D\\u044B\\u0439 \\u0441\\u0435\\u0442\\u044F\\u0445\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0420\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u0447\\u0438\\u043A\\u0438:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"\\u041E\\u0432\\u0447\\u0438\\u043D\\u043D\\u0438\\u043A\\u043E\\u0432\\u0430 \\u041C. \\u0410.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"\\u041B\\u0430\\u0440\\u044E\\u0448\\u0438\\u043D\\u0430 \\u0418. \\u0410.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"\\u041A\\u043E\\u043C\\u0438\\u0441\\u0441\\u0430\\u0440\\u043E\\u0432\\u0430 \\u0415. \\u0413.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"\\u041A\\u0443\\u0432\\u0448\\u0438\\u043D\\u043E\\u0432 \\u0412. \\u041B.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u0412\\u0435\\u043A\\u0442\\u043E\\u0440\", /*#__PURE__*/_jsxDEV(MatrixInput, {\n          rows: 5,\n          columns: 1,\n          className: `${classes.matrix} ${classes.vector}`,\n          value: vector,\n          setValue: setVector\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u041C\\u0430\\u0442\\u0440\\u0438\\u0446\\u0430 W\", /*#__PURE__*/_jsxDEV(MatrixInput, {\n          rows: 5,\n          columns: 5,\n          className: classes.matrix,\n          value: W,\n          setValue: setW\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n        title: \"NET1\",\n        result: Net1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n        title: \"OUT1\",\n        result: Out1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u041C\\u0430\\u0442\\u0440\\u0438\\u0446\\u0430 V\", /*#__PURE__*/_jsxDEV(MatrixInput, {\n          rows: 5,\n          columns: 5,\n          className: classes.matrix,\n          value: V,\n          setValue: setV\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n        title: \"NET2\",\n        result: Net2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n        title: \"OUT2\",\n        result: Out2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.offsetWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: classes.sizeInput,\n        min: 1,\n        value: size,\n        onChange: ({\n          target\n        }) => {\n          setSize(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: autoSetup,\n        children: \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u044C \\u0430\\u0432\\u0442\\u043E\\u043C\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"nBlOKj95MBb9SAHgq3jA7B22Rh4=\");\n\n_c = App;\n\nconst MatrixInput = ({\n  rows,\n  columns,\n  value: initialValue,\n  setValue: setInitialValue,\n  className\n}) => {\n  _s2();\n\n  const [value, setValue] = useState('');\n  const [isValid, setIsValid] = useState(true);\n  const [touched, setTouched] = useState(false);\n\n  const parseValue = value => {\n    return value.map(row => row.join(' ')).join('\\n');\n  };\n\n  const processValue = value => {\n    return value.split('\\n').map(row => row.split(' ').map(num => {\n      const result = parseFloat(num);\n      return !isNaN(result) ? result : num;\n    }));\n  };\n\n  const validate = value => {\n    const currentRows = value.split('\\n');\n\n    if (rows && currentRows.length !== rows) {\n      return false;\n    }\n\n    if (columns && !currentRows.every(row => row.split(' ').length === columns)) {\n      return false;\n    }\n\n    if (!currentRows.every(row => row.split(' ').every(num => num.match(/^(\\d+[.,])?\\d + $ /)))) {\n      return false;\n    }\n\n    return true;\n  };\n\n  useEffect(() => {\n    if (!Array.isArray(initialValue)) {\n      setValue('');\n    } else {\n      const value = parseValue(initialValue);\n      setValue(value);\n      const isValid = validate(value);\n      setIsValid(isValid);\n    }\n  }, [initialValue]);\n\n  const onBlur = () => {\n    !touched && setTouched(true);\n    const isValid = validate(value);\n    setIsValid(isValid);\n\n    if (value && setInitialValue) {\n      setInitialValue(processValue(value));\n    }\n  };\n\n  const changeHandler = ({\n    target\n  }) => {\n    setValue(target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    className: `${touched && !isValid ? classes.hasError : ''} ${className}`,\n    value: value,\n    onChange: changeHandler,\n    onBlur: onBlur\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(MatrixInput, \"uB9HKZrrcplaYR+jWSsyZnSbWlM=\");\n\n_c2 = MatrixInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"MatrixInput\");","map":{"version":3,"sources":["/workspaces/docker-create-react-app/src/App.jsx"],"names":["React","useEffect","useState","classes","App","size","setSize","vector","setVector","W","setW","V","setV","Net1","setNet1","Net2","setNet2","Out1","setOut1","Out2","setOut2","autoSetup","length","value","Array","from","fill","createMatrix","row","computeNet","matrix","result","i","j","vecElem","matrElem","computeOut","net","map","num","Math","pow","E","ResultColumn","title","parseFloat","toFixed","wrapper","offsetWrapper","sizeInput","target","MatrixInput","rows","columns","initialValue","setValue","setInitialValue","className","isValid","setIsValid","touched","setTouched","parseValue","join","processValue","split","isNaN","validate","currentRows","every","match","isArray","onBlur","changeHandler","hasError"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport classes from './App.module.css'\n\nexport const App = () => {\n  const [size, setSize] = useState(5)\n  const [vector, setVector] = useState([])\n  const [W, setW] = useState([])\n  const [V, setV] = useState([])\n  const [Net1, setNet1] = useState([])\n  const [Net2, setNet2] = useState([])\n  const [Out1, setOut1] = useState([])\n  const [Out2, setOut2] = useState([])\n  const autoSetup = () => {\n    if (vector.length && vector.length !== size) {\n      const value = vector[0][0]\n      setVector(Array.from({ length: size }).fill([value]))\n    }\n    const createMatrix = (value) => {\n      const row = Array.from({ length: size }).fill(value)\n      return Array.from({ length: size }).fill(row)\n    }\n    if (W.length && W.length !== size) {\n      const value = W[0][0]\n      setW(createMatrix(value))\n    }\n    if (V.length && V.length !== size) {\n      const value = V[0][0]\n      setV(createMatrix(value))\n    }\n  }\n  const computeNet = (vector, matrix) => {\n    if (vector.length !== size || matrix.length !== size) return []\n    const result = Array.from({ length: vector.length }).fill(0)\n    for (let i = 0; i < vector.length; i++) {\n      for (let j = 0; j < matrix.length; j++) {\n        const vecElem = vector[i]\n        const matrElem = matrix[j][i]\n        if (typeof vecElem !== 'number' || typeof matrElem !== 'number') return [\n        ]\n        result[i] += vecElem * matrElem\n      }\n    }\n    return result\n  }\n  const computeOut = (net) => {\n    return net.map(num => 1 / (1 + Math.pow(Math.E, -num)))\n  }\n  useEffect(() => {\n    setNet1(computeNet(vector.map(([num]) => num), W))\n  }, [vector, W])\n  useEffect(() => {\n    setOut1(computeOut(Net1))\n  }, [Net1])\n  useEffect(() => {\n    setNet2(computeNet(Out1, V))\n  }, [Out1, V])\n  useEffect(() => {\n    setOut2(computeOut(Net2))\n  }, [Net2])\n  const ResultColumn = ({ title, result }) => {\n    return (\n      <div>\n        {title}\n        <div className={classes.net}>\n          {result.map(num => <div>{parseFloat(num.toFixed(4))}</div>)}\n        </div>\n      </div>\n    )\n  }\n  return (\n    <>\n      <h2>Реализация матричной модели обработки информации в искусственных нейрон\n        ный сетях</h2>\n      <p>Разработчики:</p>\n      <ul>\n        <li>Овчинникова М. А.</li>\n        <li>Ларюшина И. А.</li>\n        <li>Комиссарова Е. Г.</li>\n        <li>Кувшинов В. Л.</li>\n      </ul>\n      <hr />\n      <div className={classes.wrapper}>\n        <div>\n          Вектор\n          <MatrixInput\n            rows={5}\n            columns={1}\n            className={`${classes.matrix} ${classes.vector}`}\n            value={vector}\n            setValue={setVector}\n          />\n        </div>\n        <div>\n          Матрица W\n          <MatrixInput\n            rows={5}\n            columns={5}\n            className={classes.matrix}\n            value={W}\n            setValue={setW}\n          />\n        </div>\n        <ResultColumn title='NET1' result={Net1} />\n        <ResultColumn title='OUT1' result={Out1} />\n        <div>\n          Матрица V\n          <MatrixInput\n            rows={5}\n            columns={5}\n            className={classes.matrix}\n            value={V}\n            setValue={setV}\n          />\n        </div>\n        <ResultColumn title='NET2' result={Net2} />\n        <ResultColumn title='OUT2' result={Out2} />\n      </div>\n      <div className={classes.offsetWrapper}>\n        <span>Размер</span>\n        <input\n          type='number'\n          className={classes.sizeInput}\n          min={1}\n          value={size}\n          onChange={({ target }) => { setSize(target.value) }}\n        />\n        <button onClick={autoSetup}>Заполнить автоматически</button>\n      </div>\n    </>\n  )\n}\n\nconst MatrixInput = ({\n  rows,\n  columns,\n  value: initialValue,\n  setValue: setInitialValue,\n  className\n}) => {\n  const [value, setValue] = useState('')\n  const [isValid, setIsValid] = useState(true)\n  const [touched, setTouched] = useState(false)\n  const parseValue = (value) => {\n    return value.map(row => row.join(' ')).join('\\n')\n  }\n  const processValue = (value) => {\n    return value.split('\\n').map(\n      row => row.split(' ').map(\n        num => {\n          const result = parseFloat(num)\n          return !isNaN(result) ? result : num\n        }\n      )\n    )\n  }\n  const validate = (value) => {\n    const currentRows = value.split('\\n')\n    if (rows && currentRows.length !== rows) {\n      return false\n    }\n    if (columns && !currentRows.every(row => row.split(' ').length === columns)) {\n      return false\n    }\n    if (!currentRows.every(row => row.split(' ').every(num => num.match(/^(\\d+[.,])?\\d + $ /)))) {\n      return false\n    }\n    return true\n  }\n  useEffect(() => {\n    if (!Array.isArray(initialValue)) {\n      setValue('')\n    } else {\n      const value = parseValue(initialValue)\n      setValue(value)\n      const isValid = validate(value)\n      setIsValid(isValid)\n    }\n  }, [initialValue])\n  const onBlur = () => {\n    !touched && setTouched(true)\n    const isValid = validate(value)\n    setIsValid(isValid)\n    if (value && setInitialValue) {\n      setInitialValue(processValue(value))\n    }\n  }\n  const changeHandler = ({ target }) => {\n    setValue(target.value)\n  }\n  return (\n    <textarea\n      className={`${touched && !isValid ? classes.hasError : ''} ${className}`}\n      value={value}\n      onChange={changeHandler}\n      onBlur={onBlur}\n    />\n  )\n}"]},"metadata":{},"sourceType":"module"}