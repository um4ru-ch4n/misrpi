{"ast":null,"code":"var _jsxFileName = \"/workspaces/docker-create-react-app/src/App.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport classes from './App.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [size, setSize] = useState(5);\n  const [vector, setVector] = useState([]);\n  const [W, setW] = useState([]);\n  const [V, setV] = useState([]);\n  const [Net1, setNet1] = useState([]);\n  const [Net2, setNet2] = useState([]);\n  const [Out1, setOut1] = useState([]);\n  const [Out2, setOut2] = useState([]);\n\n  const createMatrix = value => {\n    const row = Array.from({\n      length: size\n    }).fill(value);\n    return Array.from({\n      length: size\n    }).fill(row);\n  };\n\n  const autoSetup = () => {\n    if (vector.length && vector.length !== size) {\n      const value = vector[0][0];\n      setVector(Array.from({\n        length: size\n      }).fill([value]));\n    }\n\n    if (W.length && W.length !== size) {\n      const value = W[0][0];\n      setW(createMatrix(value));\n    }\n\n    if (V.length && V.length !== size) {\n      const value = V[0][0];\n      setV(createMatrix(value));\n    }\n  };\n\n  const computeNet = (vector, matrix) => {\n    if (vector.length !== size || matrix.length !== size) return [];\n    const result = Array.from({\n      length: vector.length\n    }).fill(0);\n\n    for (let i = 0; i < vector.length; i++) {\n      for (let j = 0; j < matrix.length; j++) {\n        const vecElem = vector[i];\n        const matrElem = matrix[j][i];\n        if (typeof vecElem !== 'number' || typeof matrElem !== 'number') return [];\n        result[i] += vecElem * matrElem;\n      }\n    }\n\n    return result;\n  };\n\n  const computeOut = net => {\n    return net.map(num => 1 / (1 + Math.pow(Math.E, -num)));\n  };\n\n  useEffect(() => {\n    setNet1(computeNet(vector.map(([num]) => num), W));\n  }, [vector, W]);\n  useEffect(() => {\n    setOut1(computeOut(Net1));\n  }, [Net1]);\n  useEffect(() => {\n    setNet2(computeNet(Out1, V));\n  }, [Out1, V]);\n  useEffect(() => {\n    setOut2(computeOut(Net2));\n  }, [Net2]);\n\n  const ResultColumn = ({\n    title,\n    result\n  }) => {\n    console.log(result);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.resultColumn,\n      children: [title, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.net,\n        children: result.map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: parseFloat(num.toFixed(4))\n        }, `num-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.main,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.matrix,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0412\\u0435\\u043A\\u0442\\u043E\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(MatrixInput, {\n          rows: 5,\n          columns: 1,\n          className: `${classes.matrixInput} ${classes.vector}`,\n          value: vector,\n          setValue: setVector\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.matrix,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0412\\u0435\\u0441\\u043E\\u0432\\u044B\\u0435 \\u043A\\u043E\\u044D\\u0444\\u0444\\u0438\\u0446\\u0438\\u0435\\u043D\\u0442\\u044B \\u043F\\u0435\\u0440\\u0432\\u043E\\u0433\\u043E \\u0441\\u043B\\u043E\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(MatrixInput, {\n          rows: 5,\n          columns: 5,\n          className: classes.matrixInput,\n          value: W,\n          setValue: setW\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.matrix,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0412\\u0435\\u0441\\u043E\\u0432\\u044B\\u0435 \\u043A\\u043E\\u044D\\u0444\\u0444\\u0438\\u0446\\u0438\\u0435\\u043D\\u0442\\u044B \\u0432\\u0442\\u043E\\u0440\\u043E\\u0433\\u043E \\u0441\\u043B\\u043E\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(MatrixInput, {\n          rows: 5,\n          columns: 5,\n          className: classes.matrixInput,\n          value: V,\n          setValue: setV\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.resultColumns,\n      children: [/*#__PURE__*/_jsxDEV(ResultColumn, {\n        title: \"NET1\",\n        result: Net1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n        title: \"\",\n        result: () => \"-> \".repeat(Net1.length).split(\" \").slice(0, Net1.length)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n        title: \"OUT1/NET2\",\n        result: Out1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n        title: \"OUT2\",\n        result: Out2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.offsetWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: classes.sizeInput,\n        min: 1,\n        value: size,\n        onChange: ({\n          target\n        }) => {\n          setSize(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: autoSetup,\n        children: \"\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"nBlOKj95MBb9SAHgq3jA7B22Rh4=\");\n\n_c = App;\n\nconst MatrixInput = ({\n  rows,\n  columns,\n  value: initialValue,\n  setValue: setInitialValue,\n  className\n}) => {\n  _s2();\n\n  const [value, setValue] = useState('');\n  const [isValid, setIsValid] = useState(true);\n  const [touched, setTouched] = useState(false);\n\n  const parseValue = value => {\n    return value.map(row => row.join(' ')).join('\\n');\n  };\n\n  const processValue = value => {\n    return value.split('\\n').map(row => row.split(' ').map(num => {\n      const result = parseFloat(num);\n      return !isNaN(result) ? result : num;\n    }));\n  };\n\n  const validate = value => {\n    const currentRows = value.split('\\n');\n\n    if (rows && currentRows.length !== rows) {\n      return false;\n    }\n\n    if (columns && !currentRows.every(row => row.split(' ').length === columns)) {\n      return false;\n    }\n\n    if (!currentRows.every(row => row.split(' ').every(num => num.match(/^(\\d+[.,])?\\d + $ /)))) {\n      return false;\n    }\n\n    return true;\n  };\n\n  useEffect(() => {\n    if (!Array.isArray(initialValue)) {\n      setValue('');\n    } else {\n      const value = parseValue(initialValue);\n      setValue(value);\n      const isValid = validate(value);\n      setIsValid(isValid);\n    }\n  }, [initialValue]);\n\n  const onBlur = () => {\n    !touched && setTouched(true);\n    const isValid = validate(value);\n    setIsValid(isValid);\n\n    if (value && setInitialValue) {\n      setInitialValue(processValue(value));\n    }\n  };\n\n  const changeHandler = ({\n    target\n  }) => {\n    setValue(target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    className: `${touched && !isValid ? classes.hasError : ''} ${className}`,\n    value: value,\n    onChange: changeHandler,\n    onBlur: onBlur\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 3\n  }, this);\n};\n\n_s2(MatrixInput, \"uB9HKZrrcplaYR+jWSsyZnSbWlM=\");\n\n_c2 = MatrixInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"MatrixInput\");","map":{"version":3,"sources":["/workspaces/docker-create-react-app/src/App.jsx"],"names":["React","useEffect","useState","classes","App","size","setSize","vector","setVector","W","setW","V","setV","Net1","setNet1","Net2","setNet2","Out1","setOut1","Out2","setOut2","createMatrix","value","row","Array","from","length","fill","autoSetup","computeNet","matrix","result","i","j","vecElem","matrElem","computeOut","net","map","num","Math","pow","E","ResultColumn","title","console","log","resultColumn","index","parseFloat","toFixed","wrapper","main","matrixInput","resultColumns","repeat","split","slice","offsetWrapper","sizeInput","target","MatrixInput","rows","columns","initialValue","setValue","setInitialValue","className","isValid","setIsValid","touched","setTouched","parseValue","join","processValue","isNaN","validate","currentRows","every","match","isArray","onBlur","changeHandler","hasError"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport classes from './App.module.scss'\n\nexport const App = () => {\n\tconst [size, setSize] = useState(5)\n\tconst [vector, setVector] = useState([])\n\tconst [W, setW] = useState([])\n\tconst [V, setV] = useState([])\n\tconst [Net1, setNet1] = useState([])\n\tconst [Net2, setNet2] = useState([])\n\tconst [Out1, setOut1] = useState([])\n\tconst [Out2, setOut2] = useState([])\n\n\tconst createMatrix = (value) => {\n\t\tconst row = Array.from({ length: size }).fill(value)\n\n\t\treturn Array.from({ length: size }).fill(row)\n\t}\n\n\tconst autoSetup = () => {\n\t\tif (vector.length && vector.length !== size) {\n\t\t\tconst value = vector[0][0]\n\n\t\t\tsetVector(Array.from({ length: size }).fill([value]))\n\t\t}\n\n\t\tif (W.length && W.length !== size) {\n\t\t\tconst value = W[0][0]\n\n\t\t\tsetW(createMatrix(value))\n\t\t}\n\n\t\tif (V.length && V.length !== size) {\n\t\t\tconst value = V[0][0]\n\n\t\t\tsetV(createMatrix(value))\n\t\t}\n\t}\n\n\tconst computeNet = (vector, matrix) => {\n\t\tif (vector.length !== size || matrix.length !== size) return []\n\n\t\tconst result = Array.from({ length: vector.length }).fill(0)\n\n\t\tfor (let i = 0; i < vector.length; i++) {\n\t\t\tfor (let j = 0; j < matrix.length; j++) {\n\t\t\t\tconst vecElem = vector[i]\n\t\t\t\tconst matrElem = matrix[j][i]\n\n\t\t\t\tif (typeof vecElem !== 'number' || typeof matrElem !== 'number') return []\n\n\t\t\t\tresult[i] += vecElem * matrElem\n\t\t\t}\n\t\t}\n\n\t\treturn result\n\t}\n\n\tconst computeOut = (net) => {\n\t\treturn net.map(num => 1 / (1 + Math.pow(Math.E, -num)))\n\t}\n\n\tuseEffect(() => {\n\t\tsetNet1(computeNet(vector.map(([num]) => num), W))\n\t}, [vector, W])\n\n\tuseEffect(() => {\n\t\tsetOut1(computeOut(Net1))\n\t}, [Net1])\n\n\tuseEffect(() => {\n\t\tsetNet2(computeNet(Out1, V))\n\t}, [Out1, V])\n\n\tuseEffect(() => {\n\t\tsetOut2(computeOut(Net2))\n\t}, [Net2])\n\n\tconst ResultColumn = ({ title, result }) => {\n\t\tconsole.log(result)\n\t\treturn (\n\t\t\t<div className={classes.resultColumn}>\n\t\t\t\t{title}\n\t\t\t\t<div className={classes.net}>\n\t\t\t\t\t{result.map((num, index) => <div key={`num-${index}`}>{parseFloat(num.toFixed(4))}</div>)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className={classes.wrapper}>\n\t\t\t{/* <h2>Реализация матричной модели обработки информации в искусственных нейрон\n\t\t\t\tный сетях</h2>\n\t\t\t<p>Разработчики:</p>\n\t\t\t<ul>\n\t\t\t\t<li>Олейников А.П.</li>\n\t\t\t\t<li>Мирошник Г.К.</li>\n\t\t\t\t<li>Петров С.Д.</li>\n\t\t\t</ul>\n\t\t\t<hr /> */}\n\t\t\t<div className={classes.main}>\n\t\t\t\t<div className={classes.matrix}>\n\t\t\t\t\t<p>Вектор</p>\n\t\t\t\t\t<MatrixInput\n\t\t\t\t\t\trows={5}\n\t\t\t\t\t\tcolumns={1}\n\t\t\t\t\t\tclassName={`${classes.matrixInput} ${classes.vector}`}\n\t\t\t\t\t\tvalue={vector}\n\t\t\t\t\t\tsetValue={setVector}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.matrix}>\n\t\t\t\t\t<p>Весовые коэффициенты первого слоя</p>\n\t\t\t\t\t<MatrixInput\n\t\t\t\t\t\trows={5}\n\t\t\t\t\t\tcolumns={5}\n\t\t\t\t\t\tclassName={classes.matrixInput}\n\t\t\t\t\t\tvalue={W}\n\t\t\t\t\t\tsetValue={setW}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={classes.matrix}>\n\t\t\t\t\t<p>Весовые коэффициенты второго слоя</p>\n\t\t\t\t\t<MatrixInput\n\t\t\t\t\t\trows={5}\n\t\t\t\t\t\tcolumns={5}\n\t\t\t\t\t\tclassName={classes.matrixInput}\n\t\t\t\t\t\tvalue={V}\n\t\t\t\t\t\tsetValue={setV}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={classes.resultColumns}>\n\t\t\t\t<ResultColumn title='NET1' result={Net1} />\n\t\t\t\t<ResultColumn title='' result={() => \"-> \".repeat(Net1.length).split(\" \").slice(0, Net1.length)} />\n\t\t\t\t<ResultColumn title='OUT1/NET2' result={Out1} />\n\n\t\t\t\t{/* <ResultColumn title='NET2' result={Net2} /> */}\n\t\t\t\t<ResultColumn title='OUT2' result={Out2} />\n\t\t\t</div>\n\t\t\t<div className={classes.offsetWrapper}>\n\t\t\t\t<span>Размер</span>\n\t\t\t\t<input\n\t\t\t\t\ttype='number'\n\t\t\t\t\tclassName={classes.sizeInput}\n\t\t\t\t\tmin={1}\n\t\t\t\t\tvalue={size}\n\t\t\t\t\tonChange={({ target }) => { setSize(target.value) }}\n\t\t\t\t/>\n\t\t\t\t<button onClick={autoSetup}>Рассчитать</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst MatrixInput = ({\n\trows,\n\tcolumns,\n\tvalue: initialValue,\n\tsetValue: setInitialValue,\n\tclassName\n}) => {\n\tconst [value, setValue] = useState('')\n\tconst [isValid, setIsValid] = useState(true)\n\tconst [touched, setTouched] = useState(false)\n\tconst parseValue = (value) => {\n\t\treturn value.map(row => row.join(' ')).join('\\n')\n\t}\n\tconst processValue = (value) => {\n\t\treturn value.split('\\n').map(\n\t\t\trow => row.split(' ').map(\n\t\t\t\tnum => {\n\t\t\t\t\tconst result = parseFloat(num)\n\t\t\t\t\treturn !isNaN(result) ? result : num\n\t\t\t\t}\n\t\t\t)\n\t\t)\n\t}\n\n\tconst validate = (value) => {\n\t\tconst currentRows = value.split('\\n')\n\t\tif (rows && currentRows.length !== rows) {\n\t\t\treturn false\n\t\t}\n\n\t\tif (columns && !currentRows.every(row => row.split(' ').length === columns)) {\n\t\t\treturn false\n\t\t}\n\n\t\tif (!currentRows.every(row => row.split(' ').every(num => num.match(/^(\\d+[.,])?\\d + $ /)))) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn true\n\t}\n\n\tuseEffect(() => {\n\t\tif (!Array.isArray(initialValue)) {\n\t\t\tsetValue('')\n\t\t} else {\n\t\t\tconst value = parseValue(initialValue)\n\t\t\tsetValue(value)\n\t\t\tconst isValid = validate(value)\n\t\t\tsetIsValid(isValid)\n\t\t}\n\t}, [initialValue])\n\n\tconst onBlur = () => {\n\t\t!touched && setTouched(true)\n\t\tconst isValid = validate(value)\n\t\tsetIsValid(isValid)\n\t\tif (value && setInitialValue) {\n\t\t\tsetInitialValue(processValue(value))\n\t\t}\n\t}\n\n\tconst changeHandler = ({ target }) => {\n\t\tsetValue(target.value)\n\t}\n\n\treturn (\n\t\t<textarea\n\t\t\tclassName={`${touched && !isValid ? classes.hasError : ''} ${className}`}\n\t\t\tvalue={value}\n\t\t\tonChange={changeHandler}\n\t\t\tonBlur={onBlur}\n\t\t/>\n\t)\n}"]},"metadata":{},"sourceType":"module"}