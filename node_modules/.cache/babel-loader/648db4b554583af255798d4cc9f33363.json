{"ast":null,"code":"var _jsxFileName = \"/workspaces/misrpi/src/App.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport classes from './App.module.scss';\nimport './index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [size, setSize] = useState(5);\n  const [vector, setVector] = useState([]);\n  const [W, setW] = useState([]);\n  const [V, setV] = useState([]);\n  const [Net1, setNet1] = useState([]);\n  const [Net2, setNet2] = useState([]);\n  const [Out1, setOut1] = useState([]);\n  const [Out2, setOut2] = useState([]);\n\n  const createMatrix = value => {\n    const row = Array.from({\n      length: size\n    }).fill(value);\n    return Array.from({\n      length: size\n    }).fill(row);\n  };\n\n  const autoSetup = () => {\n    if (vector.length && vector.length !== size) {\n      const value = 0;\n      setVector(Array.from({\n        length: size\n      }).fill([value]));\n    }\n\n    if (W.length && W.length !== size) {\n      const value = 0;\n      setW(createMatrix(value));\n    }\n\n    if (V.length && V.length !== size) {\n      const value = 0;\n      setV(createMatrix(value));\n    }\n  };\n\n  const computeNet = (vector, matrix) => {\n    if (vector.length !== size || matrix.length !== size) return [];\n    const result = Array.from({\n      length: vector.length\n    }).fill(0);\n\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < vector.length; j++) {\n        result[i] += parseFloat(matrix[i][j]) * parseFloat(vector[j]);\n      }\n    }\n\n    return result;\n  };\n\n  const computeOut = net => {\n    return net.map(num => 1 / (1 + Math.pow(Math.E, -num)));\n  };\n\n  useEffect(() => {\n    setNet1(computeNet(vector.map(([num]) => num), W));\n  }, [vector, W]);\n  useEffect(() => {\n    setOut1(computeOut(Net1));\n  }, [Net1]);\n  useEffect(() => {\n    setNet2(computeNet(Out1, V));\n  }, [Out1, V]);\n  useEffect(() => {\n    setOut2(computeOut(Net2));\n  }, [Net2]);\n\n  const ResultColumn = ({\n    title,\n    result\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.resultColumn,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.title,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.net,\n        children: result.map((num, index) => {\n          if (typeof num === 'number') {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: parseFloat(num.toFixed(4))\n            }, `num-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: num\n          }, `num-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 14\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.main,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.matrix,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0435\\u043A\\u0442\\u043E\\u0440\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(MatrixInput, {\n            rows: size,\n            columns: 1,\n            className: `${classes.matrixInput} ${classes.vector}`,\n            value: vector,\n            setValue: setVector\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.matrix,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0435\\u0441\\u043E\\u0432\\u044B\\u0435 \\u043A\\u043E\\u044D\\u0444\\u0444\\u0438\\u0446\\u0438\\u0435\\u043D\\u0442\\u044B \\u043F\\u0435\\u0440\\u0432\\u043E\\u0433\\u043E \\u0441\\u043B\\u043E\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(MatrixInput, {\n            className: classes.matrixInput,\n            value: W,\n            setValue: setW\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.matrix,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0435\\u0441\\u043E\\u0432\\u044B\\u0435 \\u043A\\u043E\\u044D\\u0444\\u0444\\u0438\\u0446\\u0438\\u0435\\u043D\\u0442\\u044B \\u0432\\u0442\\u043E\\u0440\\u043E\\u0433\\u043E \\u0441\\u043B\\u043E\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(MatrixInput, {\n            className: classes.matrixInput,\n            value: V,\n            setValue: setV\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.offsetWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: classes.sizeInput,\n          min: 1,\n          value: size,\n          onChange: ({\n            target\n          }) => {\n            setSize(parseInt(target.value));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.resolve,\n          onClick: autoSetup,\n          children: \"\\u0421\\u0434\\u0430\\u0442\\u044C \\u043B\\u0430\\u0431\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.resultColumns,\n        children: [/*#__PURE__*/_jsxDEV(ResultColumn, {\n          title: \"NET1\",\n          result: Net1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n          title: \"\",\n          result: \"→ \".repeat(Net1.length).split(\" \").slice(0, Net1.length)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n          title: \"OUT1\",\n          result: Out1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n          title: \"\",\n          result: \"→ \".repeat(Out1.length).split(\" \").slice(0, Out1.length)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n          title: \"NET2\",\n          result: Net2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n          title: \"\",\n          result: \"→ \".repeat(Net2.length).split(\" \").slice(0, Out1.length)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n          title: \"OUT2\",\n          result: Out2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"nBlOKj95MBb9SAHgq3jA7B22Rh4=\");\n\n_c = App;\n\nconst MatrixInput = ({\n  rows,\n  columns,\n  value: initialValue,\n  setValue: setInitialValue,\n  className\n}) => {\n  _s2();\n\n  const [value, setValue] = useState('');\n  const [isValid, setIsValid] = useState(true);\n  const [touched, setTouched] = useState(false);\n\n  const parseValue = value => {\n    return value.map(row => row.join(' ')).join('\\n');\n  };\n\n  const processValue = value => {\n    return value.split('\\n').map(row => row.split(' ').map(num => {\n      const result = parseFloat(num);\n      return !isNaN(result) ? result : num;\n    }));\n  };\n\n  const validate = value => {\n    const currentRows = value.split('\\n');\n\n    if (rows && currentRows.length !== rows) {\n      return false;\n    }\n\n    if (columns && !currentRows.every(row => row.split(' ').length === columns)) {\n      return false;\n    }\n\n    if (!currentRows.every(row => row.split(' ').every(num => num.match(/^\\d+([,.]\\d+)?$/)))) {\n      return false;\n    }\n\n    if (!currentRows.every(row => Math.abs(row.split(' ').reduce((acc, cur) => parseFloat(acc) + parseFloat(cur)) - 1) < Number.EPSILON)) {\n      return false;\n    } // if (!currentRows.every(row => {\n    // \tlet q = row.split(' ').reduce((acc, cur) => {\n    // \t\tlet q = parseFloat(parseFloat(acc).toFixed(4)) + parseFloat(parseFloat(cur).toFixed(4))\n    // \t\tconsole.log(q)\n    // \t\treturn q\n    // \t})\n    // \treturn 1 === 1\n    // })) {\n    // \treturn false\n    // }\n\n\n    return true;\n  };\n\n  useEffect(() => {\n    if (!Array.isArray(initialValue)) {\n      setValue('');\n    } else {\n      const value = parseValue(initialValue);\n      setValue(value);\n      const isValid = validate(value);\n      setIsValid(isValid);\n    }\n  }, [initialValue]);\n\n  const onBlur = () => {\n    !touched && setTouched(true);\n    const isValid = validate(value);\n    setIsValid(isValid);\n\n    if (value && setInitialValue) {\n      setInitialValue(processValue(value));\n    }\n  };\n\n  const changeHandler = ({\n    target\n  }) => {\n    setValue(target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    className: `${touched && !isValid ? classes.hasError : ''} ${className}`,\n    value: value,\n    onChange: changeHandler,\n    onBlur: onBlur\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 3\n  }, this);\n};\n\n_s2(MatrixInput, \"uB9HKZrrcplaYR+jWSsyZnSbWlM=\");\n\n_c2 = MatrixInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"MatrixInput\");","map":{"version":3,"sources":["/workspaces/misrpi/src/App.jsx"],"names":["React","useEffect","useState","_","classes","App","size","setSize","vector","setVector","W","setW","V","setV","Net1","setNet1","Net2","setNet2","Out1","setOut1","Out2","setOut2","createMatrix","value","row","Array","from","length","fill","autoSetup","computeNet","matrix","result","i","j","parseFloat","computeOut","net","map","num","Math","pow","E","ResultColumn","title","resultColumn","index","toFixed","wrapper","content","main","matrixInput","offsetWrapper","sizeInput","target","parseInt","resolve","resultColumns","repeat","split","slice","MatrixInput","rows","columns","initialValue","setValue","setInitialValue","className","isValid","setIsValid","touched","setTouched","parseValue","join","processValue","isNaN","validate","currentRows","every","match","abs","reduce","acc","cur","Number","EPSILON","isArray","onBlur","changeHandler","hasError"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport _ from 'lodash';\n\nimport classes from './App.module.scss'\nimport './index.scss';\n\nexport const App = () => {\n\tconst [size, setSize] = useState(5)\n\tconst [vector, setVector] = useState([])\n\tconst [W, setW] = useState([])\n\tconst [V, setV] = useState([])\n\tconst [Net1, setNet1] = useState([])\n\tconst [Net2, setNet2] = useState([])\n\tconst [Out1, setOut1] = useState([])\n\tconst [Out2, setOut2] = useState([])\n\n\tconst createMatrix = (value) => {\n\t\tconst row = Array.from({ length: size }).fill(value)\n\n\t\treturn Array.from({ length: size }).fill(row)\n\t}\n\n\tconst autoSetup = () => {\n\t\tif (vector.length && vector.length !== size) {\n\t\t\tconst value = 0\n\n\t\t\tsetVector(Array.from({ length: size }).fill([value]))\n\t\t}\n\n\t\tif (W.length && W.length !== size) {\n\t\t\tconst value = 0\n\n\t\t\tsetW(createMatrix(value))\n\t\t}\n\n\t\tif (V.length && V.length !== size) {\n\t\t\tconst value = 0\n\n\t\t\tsetV(createMatrix(value))\n\t\t}\n\t}\n\n\tconst computeNet = (vector, matrix) => {\n\t\tif (vector.length !== size || matrix.length !== size) return []\n\n\t\tconst result = Array.from({ length: vector.length }).fill(0)\n\n\t\tfor (let i = 0; i < matrix.length; i++) {\n\t\t\tfor (let j = 0; j < vector.length; j++) {\n\t\t\t\tresult[i] += parseFloat(matrix[i][j]) * parseFloat(vector[j]);\n\t\t\t}\n\t\t}\n\n\t\treturn result\n\t}\n\n\tconst computeOut = (net) => {\n\t\treturn net.map(num => 1 / (1 + Math.pow(Math.E, -num)))\n\t}\n\n\tuseEffect(() => {\n\t\tsetNet1(computeNet(vector.map(([num]) => num), W))\n\t}, [vector, W])\n\n\tuseEffect(() => {\n\t\tsetOut1(computeOut(Net1))\n\t}, [Net1])\n\n\tuseEffect(() => {\n\t\tsetNet2(computeNet(Out1, V))\n\t}, [Out1, V])\n\n\tuseEffect(() => {\n\t\tsetOut2(computeOut(Net2))\n\t}, [Net2])\n\n\tconst ResultColumn = ({ title, result }) => {\n\t\treturn (\n\t\t\t<div className={classes.resultColumn}>\n\t\t\t\t<p className={classes.title}>{title}</p>\n\t\t\t\t<div className={classes.net}>\n\t\t\t\t\t{result.map((num, index) => {\n\t\t\t\t\t\tif (typeof (num) === 'number') {\n\t\t\t\t\t\t\treturn <div key={`num-${index}`}>{parseFloat(num.toFixed(4))}</div>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn <div key={`num-${index}`}>{num}</div>\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className={classes.wrapper}>\n\t\t\t<div className={classes.content}>\n\t\t\t\t<div className={classes.main}>\n\t\t\t\t\t<div className={classes.matrix}>\n\t\t\t\t\t\t<p>Вектор</p>\n\t\t\t\t\t\t<MatrixInput\n\t\t\t\t\t\t\trows={size}\n\t\t\t\t\t\t\tcolumns={1}\n\t\t\t\t\t\t\tclassName={`${classes.matrixInput} ${classes.vector}`}\n\t\t\t\t\t\t\tvalue={vector}\n\t\t\t\t\t\t\tsetValue={setVector}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.matrix}>\n\t\t\t\t\t\t<p>Весовые коэффициенты первого слоя</p>\n\t\t\t\t\t\t<MatrixInput\n\t\t\t\t\t\t\tclassName={classes.matrixInput}\n\t\t\t\t\t\t\tvalue={W}\n\t\t\t\t\t\t\tsetValue={setW}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={classes.matrix}>\n\t\t\t\t\t\t<p>Весовые коэффициенты второго слоя</p>\n\t\t\t\t\t\t<MatrixInput\n\t\t\t\t\t\t\tclassName={classes.matrixInput}\n\t\t\t\t\t\t\tvalue={V}\n\t\t\t\t\t\t\tsetValue={setV}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.offsetWrapper}>\n\t\t\t\t\t<span>Размер</span>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tclassName={classes.sizeInput}\n\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\tvalue={size}\n\t\t\t\t\t\tonChange={({ target }) => { setSize(parseInt(target.value)) }}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className={classes.resolve} onClick={autoSetup}>Сдать лабу</button>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.resultColumns}>\n\t\t\t\t\t<ResultColumn title='NET1' result={Net1} />\n\t\t\t\t\t<ResultColumn title='' result={\"→ \".repeat(Net1.length).split(\" \").slice(0, Net1.length)} />\n\t\t\t\t\t<ResultColumn title='OUT1' result={Out1} />\n\t\t\t\t\t<ResultColumn title='' result={\"→ \".repeat(Out1.length).split(\" \").slice(0, Out1.length)} />\n\t\t\t\t\t<ResultColumn title='NET2' result={Net2} />\n\t\t\t\t\t<ResultColumn title='' result={\"→ \".repeat(Net2.length).split(\" \").slice(0, Out1.length)} />\n\t\t\t\t\t<ResultColumn title='OUT2' result={Out2} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst MatrixInput = ({\n\trows,\n\tcolumns,\n\tvalue: initialValue,\n\tsetValue: setInitialValue,\n\tclassName\n}) => {\n\tconst [value, setValue] = useState('')\n\tconst [isValid, setIsValid] = useState(true)\n\tconst [touched, setTouched] = useState(false)\n\tconst parseValue = (value) => {\n\t\treturn value.map(row => row.join(' ')).join('\\n')\n\t}\n\tconst processValue = (value) => {\n\t\treturn value.split('\\n').map(\n\t\t\trow => row.split(' ').map(\n\t\t\t\tnum => {\n\t\t\t\t\tconst result = parseFloat(num)\n\t\t\t\t\treturn !isNaN(result) ? result : num\n\t\t\t\t}\n\t\t\t)\n\t\t)\n\t}\n\n\tconst validate = (value) => {\n\t\tconst currentRows = value.split('\\n')\n\t\tif (rows && currentRows.length !== rows) {\n\t\t\treturn false\n\t\t}\n\n\t\tif (columns && !currentRows.every(row => row.split(' ').length === columns)) {\n\t\t\treturn false\n\t\t}\n\n\t\tif (!currentRows.every(row => row.split(' ').every(num => num.match(/^\\d+([,.]\\d+)?$/)))) {\n\t\t\treturn false\n\t\t}\n\n\t\tif (!currentRows.every(row => Math.abs(row.split(' ').reduce((acc, cur) => parseFloat(acc) + parseFloat(cur)) - 1) < Number.EPSILON)) {\n\t\t\treturn false\n\t\t}\n\n\n\t\t// if (!currentRows.every(row => {\n\t\t// \tlet q = row.split(' ').reduce((acc, cur) => {\n\t\t// \t\tlet q = parseFloat(parseFloat(acc).toFixed(4)) + parseFloat(parseFloat(cur).toFixed(4))\n\t\t// \t\tconsole.log(q)\n\t\t// \t\treturn q\n\t\t// \t})\n\n\n\t\t// \treturn 1 === 1\n\t\t// })) {\n\t\t// \treturn false\n\t\t// }\n\n\t\treturn true\n\t}\n\n\tuseEffect(() => {\n\t\tif (!Array.isArray(initialValue)) {\n\t\t\tsetValue('')\n\t\t} else {\n\t\t\tconst value = parseValue(initialValue)\n\t\t\tsetValue(value)\n\t\t\tconst isValid = validate(value)\n\t\t\tsetIsValid(isValid)\n\t\t}\n\t}, [initialValue])\n\n\tconst onBlur = () => {\n\t\t!touched && setTouched(true)\n\t\tconst isValid = validate(value)\n\t\tsetIsValid(isValid)\n\t\tif (value && setInitialValue) {\n\t\t\tsetInitialValue(processValue(value))\n\t\t}\n\t}\n\n\tconst changeHandler = ({ target }) => {\n\t\tsetValue(target.value)\n\t}\n\n\treturn (\n\t\t<textarea\n\t\t\tclassName={`${touched && !isValid ? classes.hasError : ''} ${className}`}\n\t\t\tvalue={value}\n\t\t\tonChange={changeHandler}\n\t\t\tonBlur={onBlur}\n\t\t/>\n\t)\n}"]},"metadata":{},"sourceType":"module"}