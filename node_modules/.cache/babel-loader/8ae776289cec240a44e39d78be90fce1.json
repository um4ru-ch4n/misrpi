{"ast":null,"code":"var _jsxFileName = \"/workspaces/docker-create-react-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState({\n    id: todos.length + 1,\n    text: \"\",\n    done: false\n  });\n\n  const onCreateTodoClickHandler = () => {\n    setTodos(prev => [...prev, newTodo]);\n    setNewTodo({\n      id: todos.length + 1,\n      text: \"\"\n    });\n  };\n\n  const onDoneClickHandler = todoId => {\n    setTodos(prev => prev.filter(todo => todo.id !== todoId));\n  };\n\n  if (!todos.length) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTodo.text,\n      onChange: event => setNewTodo({\n        id: todos.length + 1,\n        text: event.target.value\n      }),\n      placeholder: \"Write todo name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onCreateTodoClickHandler,\n      children: \"Create todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onClick: () => onDoneClickHandler(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: \"inline-block\"\n            },\n            children: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)]\n        }, \"todo - \" + todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8FqCt9bMmvVr8vWA7UzmntJiYBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/workspaces/docker-create-react-app/src/App.jsx"],"names":["useState","App","todos","setTodos","newTodo","setNewTodo","id","length","text","done","onCreateTodoClickHandler","prev","onDoneClickHandler","todoId","filter","todo","event","target","value","map","display"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC;AACrCM,IAAAA,EAAE,EAAEJ,KAAK,CAACK,MAAN,GAAe,CADkB;AAErCC,IAAAA,IAAI,EAAE,EAF+B;AAGrCC,IAAAA,IAAI,EAAE;AAH+B,GAAD,CAAtC;;AAMA,QAAMC,wBAAwB,GAAG,MAAM;AACrCP,IAAAA,QAAQ,CAACQ,IAAI,IAAK,CAChB,GAAGA,IADa,EAEhBP,OAFgB,CAAV,CAAR;AAIAC,IAAAA,UAAU,CAAC;AACTC,MAAAA,EAAE,EAAEJ,KAAK,CAACK,MAAN,GAAe,CADV;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAD,CAAV;AAID,GATD;;AAWA,QAAMI,kBAAkB,GAAIC,MAAD,IAAY;AACrCV,IAAAA,QAAQ,CAACQ,IAAI,IAAIA,IAAI,CAACG,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACT,EAAL,KAAYO,MAAhC,CAAT,CAAR;AACD,GAFD;;AAIA,MAAI,CAACX,KAAK,CAACK,MAAX,EAAmB;AACjB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEH,OAAO,CAACI,IAAlC;AAAwC,MAAA,QAAQ,EAAGQ,KAAD,IAAWX,UAAU,CAAC;AACtEC,QAAAA,EAAE,EAAEJ,KAAK,CAACK,MAAN,GAAe,CADmD;AAEtEC,QAAAA,IAAI,EAAEQ,KAAK,CAACC,MAAN,CAAaC;AAFmD,OAAD,CAAvE;AAGI,MAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAQ,MAAA,OAAO,EAAER,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,gBAEIR,KAAK,CAACiB,GAAN,CAAUJ,IAAI,IAAI;AAChB,4BACE;AAAA,kCACE;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,EAAE,MAAMH,kBAAkB,CAACG,IAAI,CAACT,EAAN;AAAxD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,KAAK,EAAE;AACRc,cAAAA,OAAO,EAAE;AADD,aAAV;AAAA,sBAEIL,IAAI,CAACP;AAFT;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA,WAAS,YAAYO,IAAI,CAACT,EAA1B;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVD;AAFJ;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GArDQL,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  const [newTodo, setNewTodo] = useState({\n    id: todos.length + 1,\n    text: \"\",\n    done: false,\n  });\n\n  const onCreateTodoClickHandler = () => {\n    setTodos(prev => ([\n      ...prev,\n      newTodo,\n    ]))\n    setNewTodo({\n      id: todos.length + 1,\n      text: \"\",\n    })\n  }\n\n  const onDoneClickHandler = (todoId) => {\n    setTodos(prev => prev.filter(todo => todo.id !== todoId));\n  }\n\n  if (!todos.length) {\n    return <p>Loading...</p>\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Todos</h1>\n      <input type=\"text\" value={newTodo.text} onChange={(event) => setNewTodo({\n        id: todos.length + 1,\n        text: event.target.value,\n      })} placeholder=\"Write todo name\" />\n      <button onClick={onCreateTodoClickHandler}>Create todo</button>\n      <ul>\n        {\n          todos.map(todo => {\n            return (\n              <li key={\"todo - \" + todo.id}>\n                <input type=\"checkbox\" onClick={() => onDoneClickHandler(todo.id)} />\n                <p style={{\n                  display: \"inline-block\",\n                }}>{todo.text}</p>\n                <span>&#10060;</span>\n              </li>\n            )\n          })\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}