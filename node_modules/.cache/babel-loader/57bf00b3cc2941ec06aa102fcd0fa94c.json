{"ast":null,"code":"var _jsxFileName = \"/workspaces/docker-create-react-app/src/App.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport classes from './App.module.css';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MatrixInput = ({\n  rows,\n  columns,\n  value: initialValue,\n  setValue: setInitialValue,\n  className\n}) => {\n  _s();\n\n  const [value, setValue] = useState('');\n  const [isValid, setIsValid] = useState(true);\n  const [touched, setTouched] = useState(false);\n\n  const parseValue = value => {\n    return value.map(row => row.join(' ')).join('\\n');\n  };\n\n  const processValue = value => {\n    return value.split('\\n').map(row => row.split(' ').map(num => {\n      const result = parseFloat(num);\n      return !isNaN(result) ? result : num;\n    }));\n  };\n\n  const validate = value => {\n    const currentRows = value.split('\\n');\n\n    if (rows && currentRows.length !== rows) {\n      return false;\n    }\n\n    if (columns && !currentRows.every(row => row.split(' ').length === columns)) {\n      return false;\n    }\n\n    if (!currentRows.every(row => row.split(' ').every(num => num.match(/^(\\d+[.,])?\\d + $ /)))) {\n      return false;\n    }\n\n    return true;\n  };\n\n  useEffect(() => {\n    if (!Array.isArray(initialValue)) {\n      setValue('');\n    } else {\n      const value = parseValue(initialValue);\n      setValue(value);\n      const isValid = validate(value);\n      setIsValid(isValid);\n    }\n  }, [initialValue]);\n\n  const onBlur = () => {\n    !touched && setTouched(true);\n    const isValid = validate(value);\n    setIsValid(isValid);\n\n    if (value && setInitialValue) {\n      setInitialValue(processValue(value));\n    }\n  };\n\n  const changeHandler = ({\n    target\n  }) => {\n    setValue(target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    className: `${touched && !isValid ? classes.hasError : ''} ${className}`,\n    value: value,\n    onChange: changeHandler,\n    onBlur: onBlur\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MatrixInput, \"uB9HKZrrcplaYR+jWSsyZnSbWlM=\");\n\n_c = MatrixInput;\n\nconst App = () => {\n  _s2();\n\n  const [size, setSize] = useState(5);\n  const [vector, setVector] = useState([]);\n  const [W, setW] = useState([]);\n  const [V, setV] = useState([]);\n  const [Net1, setNet1] = useState([]);\n  const [Net2, setNet2] = useState([]);\n  const [Out1, setOut1] = useState([]);\n  const [Out2, setOut2] = useState([]);\n\n  const autoSetup = () => {\n    if (vector.length && vector.length !== size) {\n      const value = vector[0][0];\n      setVector(Array.from({\n        length: size\n      }).fill([value]));\n    }\n\n    const createMatrix = value => {\n      const row = Array.from({\n        length: size\n      }).fill(value);\n      return Array.from({\n        length: size\n      }).fill(row);\n    };\n\n    if (W.length && W.length !== size) {\n      const value = W[0][0];\n      setW(createMatrix(value));\n    }\n\n    if (V.length && V.length !== size) {\n      const value = V[0][0];\n      setV(createMatrix(value));\n    }\n  };\n\n  const computeNet = (vector, matrix) => {\n    if (vector.length !== size || matrix.length !== size) return [];\n    const result = Array.from({\n      length: vector.length\n    }).fill(0);\n\n    for (let i = 0; i < vector.length; i++) {\n      for (let j = 0; j < matrix.length; j++) {\n        const vecElem = vector[i];\n        const matrElem = matrix[j][i];\n        if (typeof vecElem !== 'number' || typeof matrElem !== 'number') return [];\n        result[i] += vecElem * matrElem;\n      }\n    }\n\n    return result;\n  };\n\n  const computeOut = net => {\n    return net.map(num => 1 / (1 + Math.pow(Math.E, -num)));\n  };\n\n  useEffect(() => {\n    setNet1(computeNet(vector.map(([num]) => num), W));\n  }, [vector, W]);\n  useEffect(() => {\n    setOut1(computeOut(Net1));\n  }, [Net1]);\n  useEffect(() => {\n    setNet2(computeNet(Out1, V));\n  }, [Out1, V]);\n  useEffect(() => {\n    setOut2(computeOut(Net2));\n  }, [Net2]);\n\n  const ResultColumn = ({\n    title,\n    result\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [title, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.net,\n        children: result.map(num => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: parseFloat(num.toFixed(4))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 30\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0420\\u0435\\u0430\\u043B\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F \\u043C\\u0430\\u0442\\u0440\\u0438\\u0447\\u043D\\u043E\\u0439 \\u043C\\u043E\\u0434\\u0435\\u043B\\u0438 \\u043E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438 \\u0432 \\u0438\\u0441\\u043A\\u0443\\u0441\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0445 \\u043D\\u0435\\u0439\\u0440\\u043E\\u043D \\u043D\\u044B\\u0439 \\u0441\\u0435\\u0442\\u044F\\u0445\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0420\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u0447\\u0438\\u043A\\u0438:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"\\u041E\\u0432\\u0447\\u0438\\u043D\\u043D\\u0438\\u043A\\u043E\\u0432\\u0430 \\u041C. \\u0410.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"\\u041B\\u0430\\u0440\\u044E\\u0448\\u0438\\u043D\\u0430 \\u0418. \\u0410.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"\\u041A\\u043E\\u043C\\u0438\\u0441\\u0441\\u0430\\u0440\\u043E\\u0432\\u0430 \\u0415. \\u0413.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"\\u041A\\u0443\\u0432\\u0448\\u0438\\u043D\\u043E\\u0432 \\u0412. \\u041B.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u0412\\u0435\\u043A\\u0442\\u043E\\u0440\", /*#__PURE__*/_jsxDEV(MatrixInput, {\n          rows: 5,\n          columns: 1,\n          className: `${classes.matrix} ${classes.vector}`,\n          value: vector,\n          setValue: setVector\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u041C\\u0430\\u0442\\u0440\\u0438\\u0446\\u0430 W\", /*#__PURE__*/_jsxDEV(MatrixInput, {\n          rows: 5,\n          columns: 5,\n          className: classes.matrix,\n          value: W,\n          setValue: setW\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n        title: \"NET1\",\n        result: Net1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n        title: \"OUT1\",\n        result: Out1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u041C\\u0430\\u0442\\u0440\\u0438\\u0446\\u0430 V\", /*#__PURE__*/_jsxDEV(MatrixInput, {\n          rows: 5,\n          columns: 5,\n          className: classes.matrix,\n          value: V,\n          setValue: setV\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n        title: \"NET2\",\n        result: Net2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResultColumn, {\n        title: \"OUT2\",\n        result: Out2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.offsetWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: classes.sizeInput,\n        min: 1,\n        value: size,\n        onChange: ({\n          target\n        }) => {\n          setSize(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: autoSetup,\n        children: \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u044C \\u0430\\u0432\\u0442\\u043E\\u043C\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(App, \"nBlOKj95MBb9SAHgq3jA7B22Rh4=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MatrixInput\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/workspaces/docker-create-react-app/src/App.jsx"],"names":["classes","React","useEffect","useState","MatrixInput","rows","columns","value","initialValue","setValue","setInitialValue","className","isValid","setIsValid","touched","setTouched","parseValue","map","row","join","processValue","split","num","result","parseFloat","isNaN","validate","currentRows","length","every","match","Array","isArray","onBlur","changeHandler","target","hasError","App","size","setSize","vector","setVector","W","setW","V","setV","Net1","setNet1","Net2","setNet2","Out1","setOut1","Out2","setOut2","autoSetup","from","fill","createMatrix","computeNet","matrix","i","j","vecElem","matrElem","computeOut","net","Math","pow","E","ResultColumn","title","toFixed","wrapper","offsetWrapper","sizeInput"],"mappings":"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","sourcesContent":["import classes from './App.module.css'\nimport React, { useEffect, useState } from 'react'\nconst MatrixInput = ({\n  rows,\n  columns,\n  value: initialValue,\n  setValue: setInitialValue,\n  className\n}) => {\n  const [value, setValue] = useState('')\n  const [isValid, setIsValid] = useState(true)\n  const [touched, setTouched] = useState(false)\n  const parseValue = (value) => {\n    return value.map(row => row.join(' ')).join('\\n')\n  }\n  const processValue = (value) => {\n    return value.split('\\n').map(\n      row => row.split(' ').map(\n        num => {\n          const result = parseFloat(num)\n          return !isNaN(result) ? result : num\n        }\n      )\n    )\n  }\n  const validate = (value) => {\n    const currentRows = value.split('\\n')\n    if (rows && currentRows.length !== rows) {\n      return false\n    }\n    if (columns && !currentRows.every(row => row.split(' ').length === columns)) {\n      return false\n    }\n    if (!currentRows.every(row => row.split(' ').every(num => num.match(/^(\\d+[.,])?\\d + $ /)))) {\n      return false\n    }\n    return true\n  }\n  useEffect(() => {\n    if (!Array.isArray(initialValue)) {\n      setValue('')\n    } else {\n      const value = parseValue(initialValue)\n      setValue(value)\n      const isValid = validate(value)\n      setIsValid(isValid)\n    }\n  }, [initialValue])\n  const onBlur = () => {\n    !touched && setTouched(true)\n    const isValid = validate(value)\n    setIsValid(isValid)\n    if (value && setInitialValue) {\n      setInitialValue(processValue(value))\n    }\n  }\n  const changeHandler = ({ target }) => {\n    setValue(target.value)\n  }\n  return (\n    <textarea\n      className={`${touched && !isValid ? classes.hasError : ''} ${className}`}\n      value={value}\n      onChange={changeHandler}\n      onBlur={onBlur}\n    />\n  )\n}\nconst App = () => {\n  const [size, setSize] = useState(5)\n  const [vector, setVector] = useState([])\n  const [W, setW] = useState([])\n  const [V, setV] = useState([])\n  const [Net1, setNet1] = useState([])\n  const [Net2, setNet2] = useState([])\n  const [Out1, setOut1] = useState([])\n  const [Out2, setOut2] = useState([])\n  const autoSetup = () => {\n    if (vector.length && vector.length !== size) {\n      const value = vector[0][0]\n      setVector(Array.from({ length: size }).fill([value]))\n    }\n    const createMatrix = (value) => {\n      const row = Array.from({ length: size }).fill(value)\n      return Array.from({ length: size }).fill(row)\n    }\n    if (W.length && W.length !== size) {\n      const value = W[0][0]\n      setW(createMatrix(value))\n    }\n    if (V.length && V.length !== size) {\n      const value = V[0][0]\n      setV(createMatrix(value))\n    }\n  }\n  const computeNet = (vector, matrix) => {\n    if (vector.length !== size || matrix.length !== size) return []\n    const result = Array.from({ length: vector.length }).fill(0)\n    for (let i = 0; i < vector.length; i++) {\n      for (let j = 0; j < matrix.length; j++) {\n        const vecElem = vector[i]\n        const matrElem = matrix[j][i]\n        if (typeof vecElem !== 'number' || typeof matrElem !== 'number') return [\n        ]\n        result[i] += vecElem * matrElem\n      }\n    }\n    return result\n  }\n  const computeOut = (net) => {\n    return net.map(num => 1 / (1 + Math.pow(Math.E, -num)))\n  }\n  useEffect(() => {\n    setNet1(computeNet(vector.map(([num]) => num), W))\n  }, [vector, W])\n  useEffect(() => {\n    setOut1(computeOut(Net1))\n  }, [Net1])\n  useEffect(() => {\n    setNet2(computeNet(Out1, V))\n  }, [Out1, V])\n  useEffect(() => {\n    setOut2(computeOut(Net2))\n  }, [Net2])\n  const ResultColumn = ({ title, result }) => {\n    return (\n      <div>\n        {title}\n        <div className={classes.net}>\n          {result.map(num => <div>{parseFloat(num.toFixed(4))}</div>)}\n        </div>\n      </div>\n    )\n  }\n  return (\n    <>\n      <h2>Реализация матричной модели обработки информации в искусственных нейрон\n        ный сетях</h2>\n      <p>Разработчики:</p>\n      <ul>\n        <li>Овчинникова М. А.</li>\n        <li>Ларюшина И. А.</li>\n        <li>Комиссарова Е. Г.</li>\n        <li>Кувшинов В. Л.</li>\n      </ul>\n      <hr />\n      <div className={classes.wrapper}>\n        <div>\n          Вектор\n          <MatrixInput\n            rows={5}\n            columns={1}\n            className={`${classes.matrix} ${classes.vector}`}\n            value={vector}\n            setValue={setVector}\n          />\n        </div>\n        <div>\n          Матрица W\n          <MatrixInput\n            rows={5}\n            columns={5}\n            className={classes.matrix}\n            value={W}\n            setValue={setW}\n          />\n        </div>\n        <ResultColumn title='NET1' result={Net1} />\n        <ResultColumn title='OUT1' result={Out1} />\n        <div>\n          Матрица V\n          <MatrixInput\n            rows={5}\n            columns={5}\n            className={classes.matrix}\n            value={V}\n            setValue={setV}\n          />\n        </div>\n        <ResultColumn title='NET2' result={Net2} />\n        <ResultColumn title='OUT2' result={Out2} />\n      </div>\n      <div className={classes.offsetWrapper}>\n        <span>Размер</span>\n        <input\n          type='number'\n          className={classes.sizeInput}\n          min={1}\n          value={size}\n          onChange={({ target }) => { setSize(target.value) }}\n        />\n        <button onClick={autoSetup}>Заполнить автоматически</button>\n      </div>\n    </>\n  )\n}\nexport default App"]},"metadata":{},"sourceType":"module"}